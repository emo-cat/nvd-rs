use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize, PartialEq, Clone)]
#[serde(rename_all = "UPPERCASE")]
pub enum ExploitMaturity {
    /// NotDefined(X) 未定义 ;可靠的威胁情报无法确定漏洞利用成熟度特征。这是默认值，在假设最坏情况的情况下计算分数时，等效于Attacked(A)。
    NotDefined,
    /// Attacked(A) 已报告针对此漏洞的攻击；简化利用该漏洞的尝试解决方案已公开（或私下可用）。
    Attacked,
    /// POC(P) POC已公开；且未感知到针对此漏洞的利用尝试；且未感知到简化利用该漏洞的尝试的公开可用解决方案
    POC,
    /// Unreported(U) 未感知到POC公开；且未感知到针对此漏洞的利用尝试；且未感知到简化利用该漏洞的尝试的公开可用解决方案。
    Unreported,
}

impl ExploitMaturity {
    pub(crate)fn eq5(&self) -> Option<i32> {
        match self {
            ExploitMaturity::NotDefined => None,
            ExploitMaturity::Attacked => Some(0),
            ExploitMaturity::POC => Some(1),
            ExploitMaturity::Unreported => Some(2),
        }
    }
}